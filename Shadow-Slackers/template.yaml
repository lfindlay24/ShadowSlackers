AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Shadow-Slackers

  Sample SAM Template for Shadow-Slackers

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AccountsTable
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ClassroomsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClassroomsTable
      AttributeDefinitions:
        - AttributeName: roomNumber
          AttributeType: N
      KeySchema:
        - AttributeName: roomNumber
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1  

  SchedulerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'OPTIONS, GET, POST, PUT, DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /hello
            Method: get

  AccountCrudFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: API_Endpoints/
      Handler: account_Crud.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        GetAccount:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /account
            Method: get
        PostAccount:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /account
            Method: post
        PutAccount:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /account
            Method: put
        DeleteAccount:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /account
            Method: delete
      Role: !GetAtt AccountCrudFunctionRole.Arn

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: API_Endpoints/
      Handler: login_Endpoints.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /login
            Method: post
      Role: !GetAtt LoginFunctionRole.Arn

  GetAvailableClassFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: API_Endpoints/
      Handler: get_available_class.getAvailableClass
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        GetAvailableClass:
          Type: Api
          Properties:
            RestApiId: !Ref SchedulerApi
            Path: /getAvailableClass
            Method: get
      Role: !GetAtt GetAvailableClassFunctionRole.Arn


  AccountCrudFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AccountCrudFunctionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AccountsTable"
    
  LoginFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AccountCrudFunctionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AccountsTable"

  GetAvailableClassFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AccountCrudFunctionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ClassroomsTable"

# Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  # HelloWorldFunction:
  #   Description: "Hello World Lambda Function ARN"
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
